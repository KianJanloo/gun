# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateGunInput {
  barrelLength: Float!
  caliber: String!
  isAvailable: Boolean!
  magazineCapacity: Int!
  model: String!
  name: String!
  type: GunType!
  weight: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Gun {
  barrelLength: Float
  caliber: String
  id: ID!
  isAvailable: Boolean!
  magazineCapacity: Int
  model: String!
  name: String!
  type: GunType!
  weight: Float
}

input GunFilterInput {
  name: String
  type: GunType
}

input GunSortInput {
  createdAt: SortOrder
  name: SortOrder
}

enum GunType {
  COLT
  HANDGUN
  RIFLE
  SHOTGUN
  SMG
  SNIPER
}

type GunsPagination {
  guns: [Gun!]!
  total: Int!
}

input LoginAuthInput {
  email: String!
  password: String!
}

type LoginResponse {
  token: String!
  user: UserType!
}

type Mutation {
  createGun(createGunInput: CreateGunInput!): Gun!
  login(loginAuthInput: LoginAuthInput!): LoginResponse!
  register(registerAuthInput: RegisterAuthInput!): UserType!
  removeGun(id: ID!): Gun!
  removeUser(id: ID!): UserType!
  updateGun(updateGunInput: UpdateGunInput!): Gun!
  updateUser(id: ID!, updateUserInput: UpdateUserInput!): UserType!
}

type Query {
  gun(id: ID!): Gun!
  guns(filter: GunFilterInput, limit: Float = 10, page: Float = 1, sort: GunSortInput): GunsPagination!
  user(id: ID!): UserType!
  users(limit: Float = 10, page: Float = 1): USerPagination!
}

input RegisterAuthInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  username: String!
}

enum SortOrder {
  ASC
  DESC
}

type USerPagination {
  total: Float!
  users: [UserType!]!
}

input UpdateGunInput {
  barrelLength: Float
  caliber: String
  id: String!
  isAvailable: Boolean
  magazineCapacity: Int
  model: String
  name: String
  type: GunType
  weight: Float
}

input UpdateUserInput {
  email: String
  firstName: String
  lastName: String
  username: String
}

type UserType {
  createdAt: DateTime!
  email: String
  firstName: String
  id: ID!
  lastName: String
  profile_image: String
  role: String!
  updatedAt: DateTime!
  username: String!
}